<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.2 on win32)" generated="20200614 17:19:39.348" rpa="false">
<suite id="s1" name="Test" source="C:\Users\Johny\Desktop\UTB\4. semestr\TSO\SemestralniProject\TS_005-Vyhledavani\TS_005_001-Overeni\test.robot">
<test id="s1-t1" name="Pre-conditions">
<kw name="Prepare Main Page" library="mainKeywords">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${MainPage}</arg>
<arg>${ProhlizecChrome}</arg>
</arguments>
<msg timestamp="20200614 17:19:39.843" level="INFO">Opening browser 'Chrome' to base url 'https://www.nhl.com'.</msg>
<status status="PASS" starttime="20200614 17:19:39.843" endtime="20200614 17:19:46.094"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200614 17:19:46.094" endtime="20200614 17:19:52.547"></status>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${Dialog}</arg>
</arguments>
<status status="PASS" starttime="20200614 17:19:52.548" endtime="20200614 17:19:53.918"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${Dialog}</arg>
</arguments>
<msg timestamp="20200614 17:19:53.919" level="INFO">Clicking element '//*[@id="languageModal"]/div[2]/div/div[2]/button[2]'.</msg>
<status status="PASS" starttime="20200614 17:19:53.918" endtime="20200614 17:19:54.882"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${Privacy}</arg>
</arguments>
<msg timestamp="20200614 17:19:54.883" level="INFO">Clicking element '//*[@id="homepage_index"]/section/button/i'.</msg>
<status status="PASS" starttime="20200614 17:19:54.882" endtime="20200614 17:19:55.764"></status>
</kw>
<status status="PASS" starttime="20200614 17:19:39.842" endtime="20200614 17:19:55.764"></status>
</kw>
<status status="PASS" starttime="20200614 17:19:39.841" endtime="20200614 17:19:55.765" critical="yes"></status>
</test>
<test id="s1-t2" name="TC_005_001 - Overeni funkcnosti tlacitka lupy pro vyhledavani">
<kw name="Check And Click" library="mainKeywords">
<arguments>
<arg>${LoupIcon}</arg>
</arguments>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` is visible.</doc>
<arguments>
<arg>${Item}</arg>
</arguments>
<status status="PASS" starttime="20200614 17:19:55.786" endtime="20200614 17:19:55.853"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${Item}</arg>
</arguments>
<msg timestamp="20200614 17:19:55.853" level="INFO">Clicking element '//div[@class='top-nav__search']'.</msg>
<status status="PASS" starttime="20200614 17:19:55.853" endtime="20200614 17:19:56.240"></status>
</kw>
<status status="PASS" starttime="20200614 17:19:55.785" endtime="20200614 17:19:56.240"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${LoupText}</arg>
<arg>Canada</arg>
</arguments>
<msg timestamp="20200614 17:19:56.246" level="INFO">Typing text 'Canada' into text field '//input[@id='top-nav__search-autocomplete__input']'.</msg>
<status status="PASS" starttime="20200614 17:19:56.245" endtime="20200614 17:19:56.870"></status>
</kw>
<kw name="Get Value" library="SeleniumLibrary">
<doc>Returns the value attribute of the element identified by ``locator``.</doc>
<arguments>
<arg>${LoupText}</arg>
</arguments>
<assign>
<var>${LoupValue}</var>
</assign>
<msg timestamp="20200614 17:19:56.958" level="INFO">${LoupValue} = Canada</msg>
<status status="PASS" starttime="20200614 17:19:56.871" endtime="20200614 17:19:56.958"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of the element identified by ``locator``.</doc>
<arguments>
<arg>${LoupSearch}</arg>
</arguments>
<assign>
<var>${SearchingText}</var>
</assign>
<msg timestamp="20200614 17:19:57.034" level="INFO">${SearchingText} = See all results for 'Canada'</msg>
<status status="PASS" starttime="20200614 17:19:56.959" endtime="20200614 17:19:57.035"></status>
</kw>
<kw name="Remove String" library="String">
<doc>Removes all ``removables`` from the given ``string``.</doc>
<arguments>
<arg>${SearchingText}</arg>
<arg>'</arg>
<arg>See all results for</arg>
</arguments>
<assign>
<var>${SearchingText}</var>
</assign>
<msg timestamp="20200614 17:19:57.037" level="INFO">${SearchingText} =  Canada</msg>
<status status="PASS" starttime="20200614 17:19:57.036" endtime="20200614 17:19:57.037"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>'${SearchingText}'.replace(' ','')</arg>
</arguments>
<assign>
<var>${SearchingText}</var>
</assign>
<msg timestamp="20200614 17:19:57.042" level="INFO">${SearchingText} = Canada</msg>
<status status="PASS" starttime="20200614 17:19:57.040" endtime="20200614 17:19:57.042"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${SearchingText}</arg>
<arg>${LoupValue}</arg>
</arguments>
<status status="PASS" starttime="20200614 17:19:57.052" endtime="20200614 17:19:57.053"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<arguments>
<arg>${SaveTo}SearchingText.png</arg>
</arguments>
<msg timestamp="20200614 17:19:57.768" level="INFO" html="yes">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="../Screenshots/SearchingText.png"&gt;&lt;img src="../Screenshots/SearchingText.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20200614 17:19:57.053" endtime="20200614 17:19:57.768"></status>
</kw>
<status status="PASS" starttime="20200614 17:19:55.784" endtime="20200614 17:19:57.769" critical="yes"></status>
</test>
<test id="s1-t3" name="Post-conditions">
<kw name="Log URL And Close Browser" library="mainKeywords">
<kw name="Get Location" library="SeleniumLibrary">
<doc>Returns the current browser window URL.</doc>
<assign>
<var>${CurrentURL}</var>
</assign>
<msg timestamp="20200614 17:19:57.786" level="INFO">${CurrentURL} = https://www.nhl.com/</msg>
<status status="PASS" starttime="20200614 17:19:57.775" endtime="20200614 17:19:57.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${CurrentURL}</arg>
</arguments>
<msg timestamp="20200614 17:19:57.787" level="INFO">https://www.nhl.com/</msg>
<status status="PASS" starttime="20200614 17:19:57.786" endtime="20200614 17:19:57.787"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1</arg>
</arguments>
<msg timestamp="20200614 17:19:58.789" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200614 17:19:57.788" endtime="20200614 17:19:58.789"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200614 17:19:58.790" endtime="20200614 17:20:02.702"></status>
</kw>
<status status="PASS" starttime="20200614 17:19:57.775" endtime="20200614 17:20:02.702"></status>
</kw>
<status status="PASS" starttime="20200614 17:19:57.773" endtime="20200614 17:20:02.702" critical="yes"></status>
</test>
<status status="PASS" starttime="20200614 17:19:39.352" endtime="20200614 17:20:02.705"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>

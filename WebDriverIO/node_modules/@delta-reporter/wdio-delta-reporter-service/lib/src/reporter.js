"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const reporter_1 = require("@wdio/reporter");
const logger_1 = require("@wdio/logger");
const DeltaRequests = require('./requests');
const fs = require('fs');
const log = logger_1.default('wdio-delta-reporter-service');
class DeltaReporter extends reporter_1.default {
    constructor(options) {
        options = Object.assign(options, { stdout: true });
        super(options);
        this.options = options;
        this.requests = new DeltaRequests(options.host);
    }
    onRunnerStart() { }
    onBeforeCommand() { }
    onAfterCommand() { }
    onScreenshot() { }
    onSuiteStart(suite) {
        this.suite_title = suite.title;
        log.info(`Test Suite start at time: ${new Date()}`);
    }
    onHookStart() { }
    onHookEnd() { }
    onTestStart(test) { }
    onTestPass() { }
    async onTestSkip(test) {
        const testRun = JSON.parse(fs.readFileSync('./.delta_service/testRun.json'));
        let test_history = {
            name: test.title,
            start_datetime: new Date(),
            test_run_id: testRun.id
        };
        log.info(`Skipping test at time: ${new Date()}`);
        let response = await this.requests.createSkippedTestHistory(test_history, this.suite_title, this.options);
        log.info(response);
    }
    onTestEnd() { }
    onSuiteEnd(suite) { }
    onRunnerEnd() { }
}
exports.default = DeltaReporter;
module.exports = DeltaReporter;

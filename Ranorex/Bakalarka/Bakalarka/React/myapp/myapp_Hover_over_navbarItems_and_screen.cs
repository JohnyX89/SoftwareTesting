///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Bakalarka.React.myapp
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The myapp_Hover_over_navbarItems_and_screen recording.
    /// </summary>
    [TestModule("762e6a08-d48c-4854-a311-ab41d2f2e960", ModuleType.Recording, 1)]
    public partial class Myapp_Hover_over_navbarItems_and_screen : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Bakalarka.BakalarkaRepository repository.
        /// </summary>
        public static global::Bakalarka.BakalarkaRepository repo = global::Bakalarka.BakalarkaRepository.Instance;

        static Myapp_Hover_over_navbarItems_and_screen instance = new Myapp_Hover_over_navbarItems_and_screen();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Myapp_Hover_over_navbarItems_and_screen()
        {
            navbarHome = "Home";
            navbarDropdown = "Mini apps ";
            navbarAbout = "About";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Myapp_Hover_over_navbarItems_and_screen Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable navbarHome.
        /// </summary>
        [TestVariable("03f09841-d623-45bb-8fbf-4ad7d90f4c13")]
        public string navbarHome
        {
            get { return repo.navbarHome; }
            set { repo.navbarHome = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable navbarDropdown.
        /// </summary>
        [TestVariable("7cd105ad-67ea-4a04-8980-2f7ef54c5e89")]
        public string navbarDropdown
        {
            get { return repo.navbarDropdown; }
            set { repo.navbarDropdown = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable navbarAbout.
        /// </summary>
        [TestVariable("a6dda838-8a59-49a6-9765-cedc35ff68f8")]
        public string navbarAbout
        {
            get { return repo.navbarAbout; }
            set { repo.navbarAbout = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ReactApp.Root.Home' at Center.", repo.ReactApp.Root.HomeInfo, new RecordItemIndex(0));
            repo.ReactApp.Root.Home.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", navbarHome, null, false, new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ReactApp.Root.MiniApps' at Center.", repo.ReactApp.Root.MiniAppsInfo, new RecordItemIndex(2));
            repo.ReactApp.Root.MiniApps.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", navbarDropdown, null, false, new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ReactApp.Root.About' at Center.", repo.ReactApp.Root.AboutInfo, new RecordItemIndex(4));
            repo.ReactApp.Root.About.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", navbarAbout, null, false, new RecordItemIndex(5));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
